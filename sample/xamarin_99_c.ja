*****h3*****
この記事の内容
*****h1*****
DataPages コントロールのリファレンスDataPages Controls Reference
*****h3*****
この記事の内容
重要
DataPages が必要です、 Xamarin.Forms テーマレンダリングへの参照。
Forms の DataPages Nuget には、さまざまなデータ ソースのバインドの利用できるコントロールが含まれています。
これらのコントロールを XAML で使用する名前空間が含まれていることを確認、例を参照してください、xmlns:pages宣言。
次の例は、DynamicResource参照は操作するプロジェクトのリソース ディクショナリに存在する必要があります。構築する方法の例はまた、カスタム コントロールThere is also an example of how to build a custom control
*****h2*****
組み込みのコントロールBuilt-in Controls
*****h3*****
HeroImageコントロールが 4 つのプロパティ。
*****h3*****
ListItemコントロールのレイアウトはネイティブの iOS に似ており、Android のリストまたはテーブル行、ただしこの属性は通常のビューとしてにも使用できます。例では、その下のコードが内部でホストされている表示されます、StackLayoutがデータ バインド scolling リスト コントロールで使用することもできます。
5 つのプロパティがあります。
これらのスクリーン ショットを示して、 ListItem iOS および Android プラットフォームの両方、ライト テーマと暗いテーマを使用してで。
*****h2*****
カスタム コントロールの例Custom Control Example
このカスタムの目的は、CardViewコントロールはネイティブ Android CardView のようになります。
3 つのプロパティが含まれます。
目標は、カスタム コントロールを次のコードのようになります (なお、カスタムxmlns:localが必要です、現在のアセンブリを参照する)。
組み込みのライトとダーク テーマに対応する色を使用して以下のスクリーン ショットのようになります。
*****h3*****
*****h4*****
DataView のサブクラス1.
C# サブクラスDataViewコントロールのバインド可能なプロパティを定義します。
*****h4*****
フォント、レイアウト、および余白を定義します。
コントロール デザイナーは、カスタム コントロールのユーザー インターフェイス設計の一環として、これらの値を算出します。プラットフォーム固有の仕様が必要ですが、OnPlatform要素を使用します。
いくつかの値を参照するメモStaticResources – これらで定義される手順 5します。
*****h4*****
スタイルのコントロールの子を作成します。
カスタム コントロールで使用される子を作成しようと定義されているすべての要素を参照します。
*****h4*****
コントロールのレイアウト テンプレートを作成します。
カスタム コントロールのビジュアル デ ザインは上記で定義されたリソースを使用して、コントロール テンプレートで明示的に宣言します。
*****h4*****
テーマ固有のリソースを追加します。
これは、カスタム コントロールであるため、リソース ディクショナリを使用しているテーマに一致するリソースを追加します。
*****h5*****
ライト テーマの色Light Theme Colors
*****h5*****
ダーク テーマの色Dark Theme Colors
*****h4*****
CardView クラスの ControlTemplate に設定します。
最後に、c# クラスで作成されたことを確認手順 1.
*****h4*****
ページにコントロールを追加します。
CardViewコントロールをページに追加できるようになりました。
*****h2*****
フィードバック
お客様のご意見をお寄せください。お寄せいただく内容の種類を選択:
この新しいフィードバック システムは、GitHub Issues を利用して構築されています。この変更については、こちらのブログ記事をご覧ください。
*****h3*****
フィードバックを読み込んでいます...
